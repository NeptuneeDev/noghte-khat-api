// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @default(autoincrement()) @id
  email      String     @unique
  name       String
  UserFileReactions   UserFileReaction[]
  createdAt  DateTime   @default(now())
  updateAt   DateTime   @default(now())
  password   String?
  role       Role        @default(user)
  hashedRT   String?
  lastLoggedInTime DateTime?
}

enum Role {
  user
  admin
}

model Verification { // not loggedin user
  id     Int     @default(autoincrement()) @id
  email  String  @unique()
  try    Int     @default(0)
  code   String
  lastResendTime  DateTime
}

model Professor {
  id Int @default(autoincrement()) @id
  name String
  email String @unique()
  isVerified  Boolean  @default(false)
  university String
  lessons Subject[]
  createdAt DateTime
  updatedAt DateTime
}

model Subject {
  id Int @default(autoincrement()) @id
  title String
  professor Professor  @relation(fields: [professorId], references: [id])
  professorId Int
  isVerified  Boolean  @default(false)
  file File[]
  createdAt DateTime
  updatedAt DateTime
}

model File {
  id Int @default(autoincrement()) @id

  title String
  description String
  fileName    String
  type String @default("")
  size   Int  @default(0)
  isVerified  Boolean  @default(false)
  subject Subject @relation(fields: [subjectId],references: [id])
  subjectId Int
  UserFileReactions UserFileReaction[]   
  numberOfLikes Int @default(0)
  numberOfDisLikes Int @default(0)
  createdAt DateTime
  updatedAt DateTime
}



model UserFileReaction{

 file File @relation(fields: [fileId],references: [id] , onDelete: Cascade)
 fileId Int 
 
 user User @relation(fields: [userId],references: [id])
 userId Int

 reaction UserReaction
 
 @@id([fileId,userId])

}

enum UserReaction {
  like
  dislike
}